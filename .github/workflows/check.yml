name: Test & Lint & Format
on: 
  pull_request: 
    types: [opened, reopened, edited]
    branches: [main]
  push:
    branches: [main]
  workflow_dispatch:
  release: 

env:
  IMAGE_NAME: megulang

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Create Image Tag
        id: image_tag
        run: |
          HASH="${{ hashFiles('./.devcontainer/Dockerfile') }}"
          TAG="${{ env.IMAGE_NAME }}:${HASH}"
          CPATH="/tmp/docker_cache"
          TNAME="${HASH}.tar"
          TPATH="${CPATH}/${TNAME}"
          echo "HASH=${HASH}" >> $GITHUB_OUTPUT
          echo "TAG=${TAG}" >> $GITHUB_OUTPUT
          echo "CPATH=${CPATH}" >> $GITHUB_OUTPUT
          echo "TNAME=${TNAME}" >> $GITHUB_OUTPUT
          echo "TPATH=${TPATH}" >> $GITHUB_OUTPUT
      - name: Enable cache
        id: cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.image_tag.outputs.CPATH }}
          key: ${{ steps.image_tag.outputs.HASH }}
      - name: Load Image
        if: steps.cache.outputs.cache-hit == 'true'
        run: |
          docker load -i ${{ steps.image_tag.outputs.TPATH }}
      - name: Build Image
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          docker build -t ${{ steps.image_tag.outputs.TAG }} ./.devcontainer
          mkdir -p ${{ steps.image_tag.outputs.CPATH }}
          docker save ${{ steps.image_tag.outputs.TAG }} > ${{ steps.image_tag.outputs.TPATH }}
      - name: Launch Container
        run: |
          docker run --name megulang -v ${{ github.workspace }}:/work -w /work --tty -d ${{ steps.image_tag.outputs.TAG }}
      - name: Run Test
        run: |
          docker exec megulang /root/.cargo/bin/cargo test
      - name: Run Lint
        run: |
          docker exec megulang /root/.cargo/bin/cargo clippy -- -D warnings
      - name: Run Format
        run: |
          docker exec megulang /root/.cargo/bin/cargo fmt --all --check